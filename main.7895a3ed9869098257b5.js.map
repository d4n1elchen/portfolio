{"version":3,"file":"main.7895a3ed9869098257b5.js","mappings":"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","sources":["webpack://portfolio/./src/term/utils.ts","webpack://portfolio/./src/term/term.ts","webpack://portfolio/./src/index.ts","webpack://portfolio/./src/projectList/utils.ts","webpack://portfolio/webpack/startup"],"sourcesContent":["export function escapeHtml(unsafe: string): string {\n  return unsafe\n    .replace(/&/g, \"&amp;\")\n    .replace(/</g, \"&lt;\")\n    .replace(/>/g, \"&gt;\")\n    .replace(/\"/g, \"&quot;\")\n    .replace(/ /g, \"&nbsp;\")\n    .replace(/'/g, \"&#039;\");\n}\n\nexport function replaceLineBreak(str: string): string {\n  return str.replace(/\\n/g, \"<br>\");\n}\n","import { Nullable } from \"./types\";\n\nimport \"./term.scss\";\nimport { escapeHtml, replaceLineBreak } from \"./utils\";\n\nexport interface Command {\n  name: string;\n  text?: string;\n  callback?: (args: string[]) => string;\n  help?: string;\n}\n\n// TODO: autocomplete, command history\n\nexport class Term {\n  termDiv: HTMLDivElement;\n  printed: string;\n  input: string;\n\n  username: string;\n  hostname: string;\n\n  cwd: string;\n\n  commands: Map<string, Command>;\n  history: string[];\n  historyCursor: number;\n\n  constructor(\n    termDiv: Nullable<HTMLDivElement>,\n    username: string,\n    hostname: string\n  ) {\n    if (!termDiv) {\n      return;\n    }\n\n    this.termDiv = termDiv;\n    this.username = username;\n    this.hostname = hostname;\n    this.cwd = \"~\";\n\n    this.commands = new Map<string, Command>();\n\n    this.history = [];\n    this.historyCursor = 0;\n\n    let self = this;\n\n    // Add utility commands\n    this.addCommand({\n      name: \"help\",\n      callback: () => {\n        return self.getHelp();\n      },\n      help: \"Usage:  help\\n\\nPrint all available commands.\\n\",\n    });\n\n    this.addCommand({\n      name: \"clear\",\n      callback: () => {\n        self.printed = \"\";\n        return \"\";\n      },\n      help: \"Usage:  clear\\n\\nClear screen.\\n\",\n    });\n\n    this.addCommand({\n      name: \"history\",\n      callback: () => {\n        return self.getHistory();\n      },\n      help: \"Usage:  clear\\n\\nClear screen.\\n\",\n    });\n\n    // Capture keyboard input\n    document.addEventListener(\"keydown\", this.handleKeydown.bind(this));\n\n    // Support touch keyboard\n    this.termDiv.setAttribute(\"contenteditable\", \"true\");\n    this.termDiv.style.caretColor = \"transparent\";\n\n    // Print welcome message and prompt\n    this.printed = this.getWelcomeMsg() + this.getPrompt();\n    this.input = \"\";\n    this.print();\n  }\n\n  handleKeydown(event: KeyboardEvent) {\n    event.preventDefault();\n    switch (event.key) {\n      case \"Backspace\":\n        this.input = this.input.slice(0, -1);\n        break;\n      case \"Up\":\n      case \"ArrowUp\":\n        if (this.historyCursor > 0) {\n          this.historyCursor--;\n          this.input = this.history[this.historyCursor];\n        }\n        break;\n      case \"Down\":\n      case \"ArrowDown\":\n        if (this.historyCursor < this.history.length) {\n          this.historyCursor++;\n          this.input =\n            this.historyCursor == this.history.length\n              ? \"\"\n              : this.history[this.historyCursor];\n        }\n        break;\n      case \"Enter\":\n        this.printed += escapeHtml(this.input) + \"<br>\";\n        let res = this.execCommand(this.input);\n        this.printed += res + this.getPrompt();\n        this.history.push(this.input);\n        this.historyCursor = this.history.length;\n        this.input = \"\";\n        break;\n      default:\n        if (event.key.length == 1) {\n          this.input += event.key;\n        }\n    }\n    this.print();\n  }\n\n  print() {\n    this.termDiv.innerHTML = this.wrapDiv(\n      this.printed + escapeHtml(this.input) + this.getCursor(),\n      \"term-container\"\n    );\n    this.termDiv.scrollTop = this.termDiv.scrollHeight;\n  }\n\n  wrapDiv(innerHTML: string, className: string) {\n    return `<div class=\"${className}\">${innerHTML}</div>`;\n  }\n\n  getWelcomeMsg() {\n    return replaceLineBreak(\n      escapeHtml(`\n _____              _      _    _____ _                \n|  __ \\\\            (_)    | |  / ____| |               \n| |  | | __ _ _ __  _  ___| | | |    | |__   ___ _ __  \n| |  | |/ _\\` | '_ \\\\| |/ _ \\\\ | | |    | '_ \\\\ / _ \\\\ '_ \\\\\n| |__| | (_| | | | | |  __/ | | |____| | | |  __/ | | |\n|_____/ \\\\__,_|_| |_|_|\\\\___|_|  \\\\_____|_| |_|\\\\___|_| |_|\n`) +\n        `\nNice to meet you! My name is <mark>Daniel Chen</mark>!\n\nEmail: <a href=\"mailto://daniel@ccns.ncku.edu.tw\">daniel@ccns.ncku.edu.tw</a>\nBlog: <a href=\"https://blog.danielchen.cc/\">https://blog.danielchen.cc/</a>\nLinkedIn: <a href=\"https://www.linkedin.com/in/d4n1el/\">https://www.linkedin.com/in/d4n1el/</a>\n\nType 'help' and hit enter to get available commands\n\n`\n    );\n  }\n\n  getHelp() {\n    return replaceLineBreak(\n      `Welcome to Daniel's personal website!\\n\\nCurrent supported commands: ${Array.from(\n        this.commands\n      )\n        .map(([key, _]) => key)\n        .join(\", \")}\\n\\nType '[COMMAND] help' to get help for each commands\\n\\n`\n    );\n  }\n\n  getHistory() {\n    return replaceLineBreak(\n      this.history.map((command) => command + \"\\n\").join(\"\")\n    );\n  }\n\n  getPrompt() {\n    return `<span class=\"host\">${this.username}@${this.hostname}</span><span class=\"colon\">:</span><span class=\"cwd\">${this.cwd}</span> <span class=\"dollar\">$</span> `;\n  }\n\n  getCursor() {\n    return `<span class=\"cursor\">â–ˆ</span>`;\n  }\n\n  addCommand(cmd: Command) {\n    if (cmd.callback === undefined && cmd.text === undefined) {\n      throw new Error(\"Either `callback` or `text` should be defined.\");\n    }\n    this.commands.set(cmd.name, cmd);\n  }\n\n  execCommand(input: string) {\n    let args = input.split(\" \");\n    let commandName = args.splice(0, 1)[0];\n    if (this.commands.has(commandName)) {\n      let command = this.commands.get(commandName);\n      if (args[0] == \"help\") {\n        if (command.help !== undefined) {\n          return replaceLineBreak(command.help);\n        } else {\n          return \"The author is lazy. He didn't provide any help string...<br>\";\n        }\n      } else {\n        if (command.callback) {\n          return command.callback(args);\n        } else {\n          return replaceLineBreak(command.text);\n        }\n      }\n    } else if (commandName.length === 0) {\n      return \"\";\n    } else {\n      return `Command not found: ${escapeHtml(commandName)}<br>`;\n    }\n  }\n}\n","import { Term } from \"./term/term\";\nimport { replaceLineBreak } from \"./term/utils\";\nimport { Nullable } from \"./term/types\";\n\nimport \"normalize.css\";\nimport \"./index.scss\";\n\nimport projectListJSON from \"./assets/projectList.json\";\nimport { buildProjectItem, ProjectItem } from \"./projectList/utils\";\nimport \"./projectList/projectList.scss\";\n\nconst termDiv = document.getElementById(\"term\") as HTMLDivElement;\nconst term = new Term(termDiv, \"daniel\", \"usc\");\n\nterm.addCommand({\n  name: \"about\",\n  callback: () => {\n    return replaceLineBreak(`Hi, my name is Daniel Chen. Iâ€™m currently a Computer Science master student from University of Southern California. I graduated from Dept. of Mechanical Engineering, National Cheng-Kung University (NCKU), Taiwan. Iâ€™m interested in rhythm games and programming. I watch Japanese anime and conmic in my free time.\n\nMy research interests are: web development, DevOps, streaming technology, and math. In my blog, Iâ€™ll post some learning notes. Notes and tutorials will be posted in English. Reviews and jottings will be in Chinese. However, some materials that already has abundant English resource or some topics including important conceptional explaination will be written in Chinese. You are welcome to leave comments to discuss.\n\nEmail: <a href=\"mailto://daniel@ccns.ncku.edu.tw\">daniel@ccns.ncku.edu.tw</a>\nBlog: <a href=\"https://blog.danielchen.cc/\">https://blog.danielchen.cc/</a>\nLinkedIn: <a href=\"https://www.linkedin.com/in/d4n1el/\">https://www.linkedin.com/in/d4n1el/</a>\n\n`);\n  },\n  help: \"Usage:  about\\n\\nPrint some information about me\\n\",\n});\n\nlet projectList: ProjectItem[] = projectListJSON;\nterm.addCommand({\n  name: \"projects\",\n  callback: () => {\n    let div = document.createElement(\"div\");\n    projectList.forEach((item: ProjectItem) => {\n      div.appendChild(buildProjectItem(item));\n    });\n    return div.outerHTML;\n  },\n  help: \"Usage:  projects\\n\\nList all my projects\\n\",\n});\n\n// Add timer for system time display\nconst timeEl = document.getElementById(\"system-time\") as HTMLTimeElement;\nupdatSystemTime(timeEl);\nsetInterval(updatSystemTime.bind(null, timeEl), 1000);\n\nfunction updatSystemTime(timeEl: Nullable<HTMLTimeElement>) {\n  const now = new Date();\n  timeEl.setAttribute(\"datetime\", now.toISOString());\n  timeEl.innerText = now.toLocaleString(\"en-US\", {\n    weekday: \"short\",\n    month: \"short\",\n    day: \"numeric\",\n    hour: \"numeric\",\n    minute: \"numeric\",\n  });\n}\n","interface Link {\n  name?: string;\n  url: string;\n}\n\nexport interface ProjectItem {\n  name: string;\n  thumbnail?: string;\n  description?: string;\n  links?: Link[];\n}\n\nexport function buildProjectItem(item: ProjectItem): HTMLDivElement {\n  let div = document.createElement(\"div\");\n  div.classList.add(\"project-item\");\n\n  let title = document.createElement(\"h3\");\n  title.innerText = item.name;\n  div.appendChild(title);\n\n  let content = document.createElement(\"div\");\n  content.classList.add(\"project-item-content\");\n  div.appendChild(content);\n\n  if (item.thumbnail) {\n    let img = document.createElement(\"img\");\n    img.classList.add(\"project-item-thumbnail\");\n    img.src = item.thumbnail;\n    content.appendChild(img);\n  }\n\n  if (item.description) {\n    let description = document.createElement(\"p\");\n    description.classList.add(\"project-item-description\");\n    description.innerText = item.description;\n    content.appendChild(description);\n  }\n\n  if (item.links) {\n    let links = document.createElement(\"ul\");\n    links.classList.add(\"project-item-links\");\n    item.links.forEach((link: Link) => {\n      let li = document.createElement(\"li\");\n      let a = document.createElement(\"a\");\n      a.innerText = link.name ? link.name : link.url;\n      a.setAttribute(\"href\", link.url);\n      li.appendChild(a);\n      links.appendChild(li);\n    });\n    content.appendChild(links);\n  }\n\n  return div;\n}\n","// startup\n// Load entry module and return exports\n// This entry module doesn't tell about it's top-level declarations so it can't be inlined\nvar __webpack_exports__ = {};\n__webpack_modules__[578]();\n"],"names":["escapeHtml","unsafe","replace","replaceLineBreak","str","termDiv","username","hostname","this","cwd","commands","Map","history","historyCursor","self","addCommand","name","callback","getHelp","help","printed","getHistory","document","addEventListener","handleKeydown","bind","setAttribute","style","caretColor","getWelcomeMsg","getPrompt","input","print","event","preventDefault","key","slice","length","res","execCommand","push","innerHTML","wrapDiv","getCursor","scrollTop","scrollHeight","className","Array","from","map","join","command","cmd","undefined","text","Error","set","args","split","commandName","splice","has","get","term","Term","getElementById","projectList","div","createElement","forEach","item","appendChild","classList","add","title","innerText","content","thumbnail","img","src","description","links","link","li","a","url","buildProjectItem","outerHTML","timeEl","updatSystemTime","now","Date","toISOString","toLocaleString","weekday","month","day","hour","minute","setInterval","__webpack_modules__"],"sourceRoot":""}